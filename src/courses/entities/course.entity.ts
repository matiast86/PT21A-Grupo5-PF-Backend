import { ApiProperty } from '@nestjs/swagger';
import { Category } from 'src/categories/entities/category.entity';
import { Specialization } from 'src/enums/specializations.enum';
import { Lenguage } from 'src/lenguages/entities/lenguage.entity';
import { User } from 'src/users/entities/user.entity';
import {
  Column,
  Entity,
  JoinColumn,
  JoinTable,
  ManyToMany,
  ManyToOne,
  PrimaryGeneratedColumn,
} from 'typeorm';
import { v4 as uuid } from 'uuid';

@Entity({ name: 'courses' })
export class Course {
  @ApiProperty({
    type: String,
    description: 'Autogenerated uuid.',
  })
  @PrimaryGeneratedColumn('uuid')
  id: string = uuid();

  @ApiProperty({
    type: String,
    required: true,
    description: 'Course title',
  })
  @Column()
  title: string;

  @ApiProperty({
    type: String,
    required: true,
    description: 'Course target language',
  })
  @ManyToOne(() => Lenguage, lenguage => lenguage.courses )
  @JoinColumn()
  language: Lenguage;

  @ApiProperty({
    type: String,
    required: true,
    description: 'Course description',
  })
  @Column()
  description: string;

  @Column({ type: 'enum', enum: Specialization })
  specialization: Specialization;

  @ManyToMany(() => User, (user) => user.courses)
  @JoinTable()
  users?: User[];

  @ManyToOne(() => Category, (category) => category.courses)
  @JoinTable()
  category: Category;
}
