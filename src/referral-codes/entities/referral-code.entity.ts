import { ApiProperty } from '@nestjs/swagger';
import { User } from 'src/users/entities/user.entity';
import {
  Column,
  DeepPartial,
  Entity,
  ManyToOne,
  OneToOne,
  PrimaryGeneratedColumn,
} from 'typeorm';
import { v4 as uuid } from 'uuid';

@Entity({ name: 'referral-codes' })
export class ReferralCode {
  @ApiProperty({
    type: String,
    description: 'Autogenerated uuid.',
  })
  @PrimaryGeneratedColumn('uuid')
  id: string = uuid();

  @ApiProperty({
    type: String,
    description: 'Unique referral code string.',
  })
  @Column({ unique: true })
  code: string;

  @ApiProperty({
    type: Number,
    description: 'Discount percentage.',
    example: 40,
  })
  @Column()
  discount: number;

  @ApiProperty({
    type: Date,
    description: 'Date the referral code was issued.',
  })
  @Column()
  issuedAt: Date

  @ApiProperty({
    type: Date,
    description: 'Expiration date for the referral code.',
  })
  @Column()
  expirationDate: Date

  @ApiProperty({
    type: Date,
    required: false,
    description: 'Date the referral code was redeemed, if applicable.',
  })
  @Column({ nullable: true })
  redeemedAt?: Date;

  @ApiProperty({
    type: Boolean,
    default: false,
    description: 'Boolean indicating if the code was redeemed',
  })
  @Column({ default: false })
  redeemed: boolean;

  /* @ApiProperty({
    type: () => User,
    description: 'User who issued the referral code.',
  })
  @ManyToOne(() => User, (user) => user.issuedReferralCodes)
  issuer: User; */

  @ApiProperty({
    type: () => User,
    description: 'User who redeemed the referral code, if applicable.',
  })
  @OneToOne(() => User, (user) => user.redeemedReferralCode, { nullable: true })
  redeemer?: User;

  constructor(partial: DeepPartial<ReferralCode>) {
    Object.assign(this, partial);
  }
}
